version: 2.0

# Acceptance Criteria
#
# Given a feature branch of WUF-QUICK-START
# When it changes on GitHub
# Then its code is built and tested but not published
#
# Given origin/master of WUF
# When it changes on GitHub
# Then its code is built, tested, and tagged

jobs:
  build:
    docker:
      - image: node:10.15.1-alpine
    environment:
      - CHROME_BIN: /usr/lib/chromium/chrome
    steps:
      - add_ssh_keys:
          fingerprints:
            - "cb:68:f0:59:fe:8b:90:6a:42:91:0a:2d:66:65:89:96b"
      - run:
          name: Install OS tools
          # TODO: replace with install_os_pkgs.sh script
          command: |
            apk update && apk add git
            apk add bash
            apk add openssh
            apk add tar
            apk add chromium
            apk add chromium-chromedriver
            apk add docker-cli --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/latest-stable/community
            apk add ca-certificates
            apk update && apk upgrade && \
            echo @edge http://nl.alpinelinux.org/alpine/edge/community >> /etc/apk/repositories
            echo @edge http://nl.alpinelinux.org/alpine/edge/main >> /etc/apk/repositories
            apk add --no-cache \
              nss@edge \
              freetype@edge \
              harfbuzz@edge \
              ttf-freefont@edge
            apk add --no-cache ttf-freefont

      #  checkout project
      - checkout
      - restore_cache:
          keys:
            # when lock file changes, use increasingly general patterns to restore cache
            - yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
            - yarn-v1-{{ .Branch }}-
            - node-v1-
      - run:
          name: Install ng
          command: |
            yarn global add @angular/cli@7.3.1
      - run:
          name: Validate version
          command: |
            ./.circleci/validate_version.sh
      - run:
          name: Install WUF-QUICK-START
          command: |
            yarn bootstrap
      - save_cache:
          paths:
            - ./node_modules # location depends on npm version
          key: yarn-v1-{{ .Branch }}-{{ checksum "yarn.lock" }}
      - run:
          name: Build Build WUF-QUICK-START
          command: |
            ng build --prod
      - run:
          name: Unit Test WUF-QUICK-START
          command: |
            ng test --karmaConfig=src/karma.conf.circleci.js
      - run:
          name: Integration Test WUF-QUICK-START
          command: |
            ng e2e --protractorConfig=protractor.circleci.conf.js
      - setup_remote_docker
      - run:
          name: Build docker image
          command: |
            yarn build:docker
      - run:
          name: Tag WUF-QUICK-START
          command: |
            ./.circleci/tag.sh
